import numpy as np

a = np.array([
    [[1., 2., 3.],
     [4., 5., 6.],
     [7., 8., 9.]],

    [[11., 2., 3.],
     [4., 5., 6.],
     [7., 8., 9.]],

    [[1., 22., 3.],
     [4., 5., 6.],
     [7., 8., 9.]]
]
)

a.size
# Out[]: 27

a.shape
# Out[]: (3, 3, 3)

len(a.shape)
# 3

b = np.array([
    [[1., 22., 3.],
     [4., 5., 6.],
     [7., 8., 9.]],

    [[1., 2., 33.],
     [4., 5., 6.],
     [7., 8., 9.]],

    [[1., 2., 3.],
     [44., 5., 6.],
     [7., 8., 9.]]
]
)

# ===================== Select ===================
b[:2, :]
# array([[[ 1., 22.,  3.],
#         [ 4.,  5.,  6.],
#         [ 7.,  8.,  9.]],
#        [[ 1.,  2., 33.],
#         [ 4.,  5.,  6.],
#         [ 7.,  8.,  9.]]])

a - b[0]
# out:
# array([[[  0., -20.,   0.],
#         [  0.,   0.,   0.],
#         [  0.,   0.,   0.]],
#        [[ 10., -20.,   0.],
#         [  0.,   0.,   0.],
#         [  0.,   0.,   0.]],
#        [[  0.,   0.,   0.],
#         [  0.,   0.,   0.],
#         [  0.,   0.,   0.]]])

a.sum()
# Out[]: 165.0

np.sum(a,axis=(1,2))
# Out[]: array([45., 55., 65.])

np.std(a - b[0], axis=(1,2))
np.sum(np.abs(a - b[0]), axis=(1,2))

a > 10
# Out[]:
# array([[[False, False, False],
#         [False, False, False],
#         [False, False, False]],
#        [[ True, False, False],
#         [False, False, False],
#         [False, False, False]],
#        [[False,  True, False],
#         [False, False, False],
#         [False, False, False]]])


np.sum(a > 10)

np.argwhere(a > 10)
# array([[1, 0, 0],
#        [2, 0, 1]], dtype=int64)

np.argwhere(a > 1000).shape
# (0, 3)

# ================= Reshape ====================

a = np.array([
    [[1., 2., 3.],
     [4., 5., 6.],
     [7., 8., 9.]],

    [[11., 12., 13.],
     [4., 15., 6.],
     [7., 18., 9.]],

    [[21., 22., 23.],
     [4., 25., 6.],
     [7., 28., 9.]]
]
)

np.reshape(a, (3, 3*3))
# array([[ 1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.],
#        [11., 12., 13.,  4., 15.,  6.,  7., 18.,  9.],
#        [21., 22., 23.,  4., 25.,  6.,  7., 28.,  9.]])


np.reshape(a, (3, 3*3), order='F')
# array([[ 1.,  4.,  7.,  2.,  5.,  8.,  3.,  6.,  9.],
#        [11.,  4.,  7., 12., 15., 18., 13.,  6.,  9.],
#        [21.,  4.,  7., 22., 25., 28., 23.,  6.,  9.]])

np.reshape(a, (3*3*3), order='F')
# array([ 1., 11., 21.,  4.,  4.,  4.,  7.,  7.,  7.,  2., 12., 22.,  5.,
#        15., 25.,  8., 18., 28.,  3., 13., 23.,  6.,  6.,  6.,  9.,  9.,
#         9.])

np.reshape(np.reshape(a, (3, 3*3)), (3,3,3))
# array([[ 1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.],
#        [11., 12., 13.,  4., 15.,  6.,  7., 18.,  9.],
#        [21., 22., 23.,  4., 25.,  6.,  7., 28.,  9.]])

np.reshape(a, (-1, 3, 3, 1))
# array([[[[ 1.],
#          [ 2.],
#          [ 3.]],
#         [[ 4.],
#          [ 5.],
#          [ 6.]],
#         [[ 7.],
#          [ 8.],
#          [ 9.]]],
#        [[[11.],
#          [12.],
#          [13.]],
#         [[ 4.],
#          [15.],
#          [ 6.]],
#         [[ 7.],
#          [18.],
#          [ 9.]]],
#        [[[21.],
#          [22.],
#          [23.]],
#         [[ 4.],
#          [25.],
#          [ 6.]],
#         [[ 7.],
#          [28.],
#          [ 9.]]]])

a = np.array([
    [[[1., 2.], [3., 4.]],
     [[4., 5.], [6., 7.]],
     [[7., 8.], [9., 10.]]],

    [[[1., 2.], [3., 4.]],
     [[4., 5.], [6., 7.]],
     [[7., 8.], [9., 10.]]],

    [[[1., 2.], [3., 4.]],
     [[4., 5.], [6., 7.]],
     [[7., 8.], [9., 10.]]],
]
)

a[:, :, :, 1]
